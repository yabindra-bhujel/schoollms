#!/bin/bash -eu

FLG_DATABASE=
while getopts dn OPT
do
  case $OPT in
    "d" ) FLG_DATABASE="TRUE" ;;
  esac
done

shift $((OPTIND - 1))

#環境変数の設定
CONTAINER_NAME="database"
DATABASE_NAME="school_db"
NETWORK_NAME="school_app"

cd "$(dirname ${0})/.."
. bin/load_env

# 環境変数を読み込んで.envファイルを生成
eval "echo \"$(cat services/api/env.template)\"" > services/api/.env
eval "echo \"$(cat services/client/env.template)\"" > services/client/.env

#Dockerネットワークなければ作成
echo "Creating Docker network '$NETWORK_NAME' if not exists..."
docker network ls | grep -wq $NETWORK_NAME || docker network create $NETWORK_NAME

if [ -n "$FLG_DATABASE" ]; then
    #データベースコンテナがなければ作成
    echo "Starting the database container..."
    docker-compose -f docker-compose.db.yml up -d

    #接続確認
    echo "Waiting for PostgreSQL to be ready..."
    RETRY_COUNT=0
    MAX_RETRIES=5
    until docker exec $CONTAINER_NAME pg_isready -U postgres || [ $RETRY_COUNT -eq $MAX_RETRIES ]; do
        echo "PostgreSQL not ready, retrying in 2 seconds..."
        sleep 2
        RETRY_COUNT=$((RETRY_COUNT + 1))
    done

    if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
        echo "Failed to connect to PostgreSQL after multiple attempts. Exiting..."
        exit 1
    fi

    #データベースをなければ作成
    echo "Creating the database '$DATABASE_NAME'..."
    docker exec $CONTAINER_NAME psql -U postgres -lqt | cut -d \| -f 1 | grep -qw $DATABASE_NAME
    if [ $? -eq 1 ]; then
        docker exec $CONTAINER_NAME psql -U postgres -c "CREATE DATABASE $DATABASE_NAME;"
        echo "Database '$DATABASE_NAME' created!"
    fi
fi

cd services/api

# Set up the virtual environment with Poetry
echo "Setting up the virtual environment with Poetry..."
poetry env use python3
poetry install --no-interaction --no-ansi

#データベースマイグレーション
echo "Running database migrations..."
poetry run python manage.py migrate

#Django の 静的ファイル収集
echo "Collecting static files..."
poetry run python manage.py collectstatic --noinput

#開発サーバー起動
echo "Starting the Django development server..."
poetry run python manage.py runserver 0.0.0.0:8000 &

cd ../client

npm install

npm start

exit $?
